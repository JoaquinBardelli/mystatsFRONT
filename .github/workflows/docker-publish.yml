name: CI/CD with Docker

on:
  pull_request:
    branches:
      - main  # Rama en la que se ejecutará el flujo de trabajo

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Paso 3: Iniciar sesión en Docker Hub
      - name: Log into Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 4: Extraer metadata del Dockerfile
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Paso 5: Construir y probar la imagen Docker
      - name: Build and test Docker image
        id: build-and-test
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: false  # No sube la imagen aún
          tags: ${{ steps.meta.outputs.tags }}-test  # Usamos un tag para pruebas

      # Paso 6: Si los tests pasan, construir y subir la imagen de producción
      - name: Build and push Docker image for production
        if: success()  # Solo si los tests pasaron
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true  # Esto subirá la imagen a Docker Hub
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Paso 7: (Opcional) Firmar la imagen Docker publicada
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
